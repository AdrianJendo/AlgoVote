name: Production Workflow

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCE_INSTANCE: algo-vote
  GCE_ZONE: us-central1-a
  ARTIFACT_LOCATION: us-central1

jobs:
  deploy-app:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          project_id: $PROJECT_ID

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Build the Docker images
      - name: Build Frontend
        run: |-
          docker build \
            -f frontend/Dockerfile.prod \
            --build-arg DATA_ENCRYPTION_KEY=${{ secrets.DATA_ENCRYPTION_KEY }}  \
            --tag “us-central1-docker.pkg.dev/$PROJECT_ID/$GCE_INSTANCE/$GCE_INSTANCE-frontend" \
            frontend
      - name: Build Backend
        run: |-
          docker build \
            -f backend/Dockerfile.prod \
            --tag “us-central1-docker.pkg.dev/$PROJECT_ID/$GCE_INSTANCE/$GCE_INSTANCE-backend" \
            backend
      - name: Build Nginx
        run: |-
          docker build \
            --tag “us-central1-docker.pkg.dev/$PROJECT_ID/$GCE_INSTANCE/$GCE_INSTANCE-nginx" \
            nginx

      # Push the Docker images to Google Container Registry
      - name: Publish Frontend
        run: |-
          docker push "$ARTIFACT_LOCATION-docker.pkg.dev/$PROJECT_ID/$GCE_INSTANCE/$GCE_INSTANCE-frontend"

      - name: Publish Backend
        run: |-
          docker push "$ARTIFACT_LOCATION-docker.pkg.dev/$PROJECT_ID/$GCE_INSTANCE/$GCE_INSTANCE-backend"

      - name: Publish Nginx
        run: |-
          docker push "$ARTIFACT_LOCATION-docker.pkg.dev/$PROJECT_ID/$GCE_INSTANCE/$GCE_INSTANCE-nginx"

      # Send docker-compose file and .env with environment variables to GCE instance
      - name: Transfer Files
        run: |-
          echo """
          BACKEND_PORT=${{ secrets.BACKEND_PORT }}
          ALGOD_TOKEN=${{ secrets.ALGOD_TOKEN }}
          DATA_ENCRYPTION_KEY=${{ secrets.DATA_ENCRYPTION_KEY }}
          # LD_LIBRARY_PATH=/usr/local/lib
          """ > .env
          gcloud --quiet compute scp --zone $GCE_ZONE .env $GCE_INSTANCE:~
          gcloud --quiet compute scp --zone $GCE_ZONE docker-compose.prod.yml $GCE_INSTANCE:~

      # Deploy the Docker image in the GCE instance
      - name: Deploy
        run: |-
          gcloud compute ssh $GCE_INSTANCE --zone $GCE_ZONE --project $PROJECT_ID --comand \
          '
          gcloud --quiet auth configure-docker $GCE_ZONE-docker.pkg.dev && \
          docker-compose -f docker-compose.prod.yml pull && \
          docker-compose -f docker-compose.prod.yml up --remove-orphans --build -d && \
          docker image prune -af \
          '